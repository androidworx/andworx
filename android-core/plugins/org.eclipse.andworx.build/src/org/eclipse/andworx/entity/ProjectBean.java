/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Eclipse Public License, Version 1.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.eclipse.org/org/documents/epl-v10.php
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.eclipse.andworx.entity;

import java.util.Collection;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;

import org.eclipse.andworx.config.AndroidConfig;

import com.android.builder.model.BaseConfig;
import com.android.tools.r8.com.google.common.collect.ImmutableList;
import com.android.tools.r8.com.google.common.collect.ImmutableList.Builder;

/**
 * Andworx project. Links to project configuration tables.
 */
@Entity(name="tableProject")
public class ProjectBean {

	/** We use this field-name so we can query for projects with a certain id */
	public final static String ID_FIELD_NAME = "id";
    /** Column name in join table for android config foreign key */
	public final static String ANDROID_ID_FIELD_NAME = "android_id";

	/** This id is generated by the database and set on the object when it is passed to the create method */
    @Id @GeneratedValue
 	int id;

	/** Project name.  */
	@Column
	String name;

	@OneToOne
    @JoinColumn(name=ANDROID_ID_FIELD_NAME, referencedColumnName="id")
	AndroidBean androidConfig;
	
	/** Build Types belonging to this project. The association is uni-directional, and the project "owns" it */
    @OneToMany(fetch=FetchType.EAGER)
    Collection<BaseConfigBean> buildTypes;
 
	/** Dependencies belonging to this project. The association is uni-directional, and the project "owns" it */
    @OneToMany(fetch=FetchType.EAGER)
    Collection<DependencyBean> dependencies;
   
    /**
     * Project default constructor for OrmLite
     */
	public ProjectBean() {
	}

	public static String getIdFieldName() {
		return ID_FIELD_NAME;
	}

	public int getId() {
		return id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public List<BaseConfig> getBuildTypes() {
		Builder<BaseConfig> builder = ImmutableList.builder();
		for (BaseConfig baseConfig: buildTypes)
			builder.add(baseConfig);
		return builder.build();
	}
	
	public AndroidConfig getAndroidConfig() {
		return androidConfig;
	}
}
