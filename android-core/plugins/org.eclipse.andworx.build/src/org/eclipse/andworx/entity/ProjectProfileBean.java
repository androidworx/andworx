/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Eclipse Public License, Version 1.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.eclipse.org/org/documents/epl-v10.php
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.eclipse.andworx.entity;

import static org.eclipse.andworx.project.AndroidConfiguration.VOID_PROJECT_ID;

import java.util.Collections;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Transient;

import org.eclipse.andworx.maven.Dependency;
import org.eclipse.andworx.project.AndroidConfiguration;

import com.android.SdkConstants;
import com.android.sdklib.AndroidTargetHash;

/**
 * Essential project characteristics such as identity, dependencies and Android target
 */
@Entity(name="tableProjectProfile")
public class ProjectProfileBean {
	/** We use this field-name so we can query for projects with a certain id */
	public final static String ID_FIELD_NAME = "id";
    /** Column name in join table for project foreign key */
	public final static String PROJECT_ID_FIELD_NAME = "project_id";

	/** This id is generated by the database and set on the object when it is passed to the create method */
    @Id @GeneratedValue
 	int id;

	/** This is a foreign object which just stores the id from the Project object in this table. */
    @OneToOne
    @JoinColumn(name=PROJECT_ID_FIELD_NAME, referencedColumnName="id")
	ProjectBean projectBean;

	@Column
    String groupId;
	@Column
    String artifactId;
	@Column
    String version;
	@Column
	Boolean isLibrary;
	@Column
	String targetHash;
	@Column
	String buildToolsVersion;
	
	/** Dependency entity has a project foreign key. The application manages dependencies in this object */
	@Transient
	Set<Dependency> dependencies;	
	
    public ProjectProfileBean(String groupId, String artifactId, String version) {
    	this();
    	this.groupId = groupId;
    	this.artifactId = artifactId;
    	this.version = version;
    	id = VOID_PROJECT_ID;
    }
 
    /**
     * Construct ProjectProfileBean object
     */
    ProjectProfileBean() {
		// Target platform is duplicate of android.compileSdkVersion. Use major release of buildToolsVersion as default.
		// buildToolsVersion is optional. Use current version specified by SDK as default
		buildToolsVersion = SdkConstants.CURRENT_BUILD_TOOLS_VERSION;
		String compileSdkVersion = buildToolsVersion.substring(0, buildToolsVersion.indexOf('.'));
		targetHash = AndroidTargetHash.PLATFORM_HASH_PREFIX + compileSdkVersion;
		isLibrary = Boolean.FALSE;
    }
    
	public void setProjectBean(ProjectBean projectBean) {
		this.projectBean = projectBean;
	}

	public Set<Dependency> getDependencies() {
		return dependencies != null ? dependencies : Collections.emptySet();
	}

	public void setDependencies(Set<Dependency> dependencies) {
		this.dependencies = dependencies;
	}

	public String getTargetHash() {
		return targetHash;
	}

	public void setTargetHash(String targetHash) {
		this.targetHash = targetHash;
	}

	public String getGroupId() {
		return groupId;
	}

	public String getArtifactId() {
		return artifactId;
	}

	public String getVersion() {
		return version;
	}

	public Boolean isLibrary() {
		return isLibrary;
	}

	public String getBuildToolsVersion() {
		return buildToolsVersion;
	}

	public void setLibrary(Boolean isLibrary) {
		this.isLibrary = isLibrary;
	}

	public void setBuildToolsVersion(String buildToolsVersion) {
		this.buildToolsVersion = buildToolsVersion;
	}

	public int getProjectId() {
		if ((projectBean == null) || (projectBean.getId() == 0))
			return AndroidConfiguration.VOID_PROJECT_ID;
		return projectBean.getId();
	}

}
