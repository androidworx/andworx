/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Eclipse Public License, Version 1.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.eclipse.org/org/documents/epl-v10.php
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.eclipse.andworx.entity;

import java.util.Collection;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;

import org.eclipse.andworx.model.SourcePath;
import org.eclipse.andworx.model.SourceSet;

import com.google.common.collect.ImmutableList;
import com.google.common.collect.ImmutableList.Builder;

/**
 * An AndroidSource represents an item in a logical group of Java, aidl and RenderScript sources
 * as well as Android and non-Android (Java-style) resources.
 */
@Entity(name="tableAndroidSource")
public class AndroidSourceBean implements SourceSet {

	/** We use this field-name so we can query for projects with a certain id */
	public final static String ID_FIELD_NAME = "id";
    /** Column name in join table for project foreign key */
	public final static String PROJECT_ID_FIELD_NAME = "project_id";

	/** This id is generated by the database and set on the object when it is passed to the create method */
    @Id @GeneratedValue
 	int id;

	/** This is a foreign object which just stores the id from the Project object in this table. */
    @OneToOne
    @JoinColumn(name=PROJECT_ID_FIELD_NAME, referencedColumnName="id")
	ProjectBean projectBean;

	/** SourceSets belonging to this Android Source. The association is uni-directional, and the Android Source "owns" it */
    @OneToMany(fetch=FetchType.EAGER)
    Collection<SourceSetBean> sourceSetBeans;
 
	@Column
	String name;

	/**
	 * Construct an AndroidSourceBean object
	 * @param projectBean Entity bean of project owner
	 * @param name Source set name
	 */
	public AndroidSourceBean(ProjectBean projectBean, String name) {
		this.projectBean = projectBean;
		this.name = name;
	}

	/**
	 * Mandatory for OrmLite
	 */
	AndroidSourceBean() {
	}
	
	/**
	 * Android Source set name 
	 * There are two Source Set names defined in org.eclipse.andworx.model.SourceSet: MAIN_SOURCE_SET_NAME, TEST_SOURCE_SET_NAME
	 */
	@Override
	public String getName() {
		return name;
	}

	/**
	 * Returns Source paths
	 * @return SourcePath collection
	 */
	public Collection<SourcePath> getSourcePaths() {
		Builder<SourcePath> builder = ImmutableList.builder();
		for (SourceSetBean bean: sourceSetBeans) {
			builder.add(bean);
		}
		return builder.build();
	}
}
